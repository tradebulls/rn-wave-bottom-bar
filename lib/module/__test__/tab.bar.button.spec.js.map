{"version":3,"sources":["tab.bar.button.spec.tsx"],"names":["tabBarIcon","props","describe","beforeAll","jest","useFakeTimers","afterAll","useRealTimers","it","tree","renderer","create","fn","runAllTimers","expect","toJSON","toMatchSnapshot"],"mappings":"wPAAA,oDACA,yCACA,qEAEA,oD,sGAEA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,QAAgB,8BAAC,iBAAD,0BAAUA,KAAV,kEAAhB,EAAnB,CAEAC,QAAQ,CAAC,cAAD,CAAiB,UAAM,CAC7BC,SAAS,CAAC,UAAM,CACdC,IAAI,CAACC,aAAL,GACD,CAFQ,CAAT,CAGAC,QAAQ,CAAC,UAAM,CACbF,IAAI,CAACG,aAAL,GACD,CAFO,CAAR,CAGAC,EAAE,CAAC,oCAAD,CAAuC,UAAM,CAC7C,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,MAAT,CACX,6BAAC,iBAAD,EACE,KAAK,CAAE,CADT,CAEE,SAAS,KAFX,CAGE,OAAO,CAAE,CAAEX,UAAU,CAAVA,UAAF,CAHX,CAIE,OAAO,CAAEI,IAAI,CAACQ,EAAL,EAJX,CAKE,WAAW,CAAER,IAAI,CAACQ,EAAL,EALf,gEADW,CAAb,CASAR,IAAI,CAACS,YAAL,GACAC,MAAM,CAACL,IAAI,CAACM,MAAL,EAAD,CAAN,CAAsBC,eAAtB,GACD,CAZC,CAAF,CAaAR,EAAE,CAAC,sCAAD,CAAyC,UAAM,CAC/C,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,MAAT,CACX,6BAAC,iBAAD,EACE,KAAK,CAAE,CADT,CAEE,SAAS,CAAE,KAFb,CAGE,OAAO,CAAE,CAAEX,UAAU,CAAVA,UAAF,CAHX,CAIE,OAAO,CAAEI,IAAI,CAACQ,EAAL,EAJX,CAKE,WAAW,CAAER,IAAI,CAACQ,EAAL,EALf,gEADW,CAAb,CASAR,IAAI,CAACS,YAAL,GACAC,MAAM,CAACL,IAAI,CAACM,MAAL,EAAD,CAAN,CAAsBC,eAAtB,GACD,CAZC,CAAF,CAaAR,EAAE,CAAC,oCAAD,CAAuC,UAAM,CAC7C,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,MAAT,CACX,6BAAC,oBAAD,EACE,KAAK,CAAE,CADT,CAEE,SAAS,KAFX,CAGE,OAAO,CAAE,CAAEX,UAAU,CAAVA,UAAF,CAHX,CAIE,OAAO,CAAEI,IAAI,CAACQ,EAAL,EAJX,CAKE,WAAW,CAAER,IAAI,CAACQ,EAAL,EALf,gEADW,CAAb,CASAR,IAAI,CAACS,YAAL,GACAC,MAAM,CAACL,IAAI,CAACM,MAAL,EAAD,CAAN,CAAsBC,eAAtB,GACD,CAZC,CAAF,CAaAR,EAAE,CAAC,sCAAD,CAAyC,UAAM,CAC/C,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,MAAT,CACX,6BAAC,oBAAD,EACE,KAAK,CAAE,CADT,CAEE,SAAS,CAAE,KAFb,CAGE,OAAO,CAAE,CAAEX,UAAU,CAAVA,UAAF,CAHX,CAIE,OAAO,CAAEI,IAAI,CAACQ,EAAL,EAJX,CAKE,WAAW,CAAER,IAAI,CAACQ,EAAL,EALf,gEADW,CAAb,CASAR,IAAI,CAACS,YAAL,GACAC,MAAM,CAACL,IAAI,CAACM,MAAL,EAAD,CAAN,CAAsBC,eAAtB,GACD,CAZC,CAAF,CAaD,CA3DO,CAAR","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport * as renderer from 'react-test-renderer';\n\nimport { BarButton, TabBarButton } from '../components/tab.bar.button';\n\nconst tabBarIcon = (props: any) => <View {...props} />;\n\ndescribe('TabBarButton', () => {\n  beforeAll(() => {\n    jest.useFakeTimers();\n  });\n  afterAll(() => {\n    jest.useRealTimers();\n  });\n  it(\"Should render well when it's Focus\", () => {\n    const tree = renderer.create(\n      <BarButton\n        index={0}\n        isFocused\n        options={{ tabBarIcon }}\n        onPress={jest.fn()}\n        onLongPress={jest.fn()}\n      />\n    );\n    jest.runAllTimers();\n    expect(tree.toJSON()).toMatchSnapshot();\n  });\n  it('Should render well it is not focused', () => {\n    const tree = renderer.create(\n      <BarButton\n        index={0}\n        isFocused={false}\n        options={{ tabBarIcon }}\n        onPress={jest.fn()}\n        onLongPress={jest.fn()}\n      />\n    );\n    jest.runAllTimers();\n    expect(tree.toJSON()).toMatchSnapshot();\n  });\n  it(\"Should render well when it's Focus\", () => {\n    const tree = renderer.create(\n      <TabBarButton\n        index={0}\n        isFocused\n        options={{ tabBarIcon }}\n        onPress={jest.fn()}\n        onLongPress={jest.fn()}\n      />\n    );\n    jest.runAllTimers();\n    expect(tree.toJSON()).toMatchSnapshot();\n  });\n  it('Should render well it is not focused', () => {\n    const tree = renderer.create(\n      <TabBarButton\n        index={0}\n        isFocused={false}\n        options={{ tabBarIcon }}\n        onPress={jest.fn()}\n        onLongPress={jest.fn()}\n      />\n    );\n    jest.runAllTimers();\n    expect(tree.toJSON()).toMatchSnapshot();\n  });\n});\n"]}